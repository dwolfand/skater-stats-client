import { precacheAndRoute, createHandlerBoundToURL } from "workbox-precaching";
import { NavigationRoute, registerRoute } from "workbox-routing";
import { NetworkFirst, StaleWhileRevalidate } from "workbox-strategies";
import { ExpirationPlugin } from "workbox-expiration";

// Precache all assets generated by vite
precacheAndRoute(self.__WB_MANIFEST);

// Handle navigation requests with a Network-First strategy
const handler = createHandlerBoundToURL("/index.html");
const navigationRoute = new NavigationRoute(handler);
registerRoute(navigationRoute);

// Check for updates to index.html every 5 minutes
const checkForUpdates = async () => {
  try {
    const cache = await caches.open("start-url");
    const response = await fetch("/", {
      cache: "no-store",
      headers: {
        "Cache-Control": "no-cache",
      },
    });
    if (response.ok) {
      await cache.put("/", response);
      // If we got a new version, notify clients to reload
      const clients = await self.clients.matchAll();
      clients.forEach((client) => client.postMessage({ type: "RELOAD_PAGE" }));
    }
  } catch (error) {
    console.error("Update check failed:", error);
  }
};

self.addEventListener("activate", (event) => {
  event.waitUntil(
    Promise.all([
      // Immediate check on activation
      checkForUpdates(),
      // Take control of all clients immediately
      self.clients.claim(),
    ])
  );
});

// Set up periodic update checks
setInterval(checkForUpdates, 5 * 60 * 1000); // Check every 5 minutes
